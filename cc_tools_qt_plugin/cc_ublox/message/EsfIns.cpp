// Generated by commsdsl2tools_qt v6.3.4

#include "EsfIns.h"

#include "cc_tools_qt/ProtocolMessageBase.h"
#include "cc_tools_qt/property/field.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Itow.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Res4.h"
#include "cc_tools_qt_plugin/cc_ublox/options/DefaultOptions.h"
#include "cc_ublox/message/EsfIns.h"

namespace cc_tools_qt_plugin
{

namespace cc_ublox
{

namespace message
{

namespace
{

struct Bitfield0Members
{
    static QVariantMap createProps_version(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::message::EsfInsFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Bitfield0Members::Version;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .asMap();
    }

    static QVariantMap createProps_bits(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::message::EsfInsFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Bitfield0Members::Bits;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(0U, "xAngRateValid")
                .add(1U, "yAngRateValid")
                .add(2U, "zAngRateValid")
                .add(3U, "xAccelValid")
                .add(4U, "yAccelValid")
                .add(5U, "zAccelValid")
                .asMap();
    }
}; // struct Bitfield0Members

static QVariantMap createProps_bitfield0(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::EsfInsFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Bitfield0;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .add(Bitfield0Members::createProps_version(true))
            .add(Bitfield0Members::createProps_bits(true))
            .asMap();
}

static QVariantMap createProps_reserved1(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::EsfInsFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved1;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res4(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_itow(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::EsfInsFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Itow;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_itow(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_xAngRate(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::EsfInsFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::XAngRate;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .scaledDecimals(3U)
            .asMap();
}

static QVariantMap createProps_yAngRate(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::EsfInsFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::YAngRate;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .scaledDecimals(3U)
            .asMap();
}

static QVariantMap createProps_zAngRate(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::EsfInsFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::ZAngRate;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .scaledDecimals(3U)
            .asMap();
}

static QVariantMap createProps_xAccel(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::EsfInsFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::XAccel;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_yAccel(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::EsfInsFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::YAccel;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_zAccel(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::EsfInsFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::ZAccel;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

QVariantList createProps()
{
    QVariantList props;
    props.append(createProps_bitfield0(false));
    props.append(createProps_reserved1(false));
    props.append(createProps_itow(false));
    props.append(createProps_xAngRate(false));
    props.append(createProps_yAngRate(false));
    props.append(createProps_zAngRate(false));
    props.append(createProps_xAccel(false));
    props.append(createProps_yAccel(false));
    props.append(createProps_zAccel(false));
    return props;
}

} // namespace

class EsfInsImpl : public
    cc_tools_qt::ProtocolMessageBase<
        ::cc_ublox::message::EsfIns<cc_tools_qt_plugin::cc_ublox::Message, cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>,
        EsfInsImpl
    >
{
public:
    EsfInsImpl() = default;
    EsfInsImpl(const EsfInsImpl&) = delete;
    EsfInsImpl(EsfInsImpl&&) = delete;
    virtual ~EsfInsImpl() = default;
    EsfInsImpl& operator=(const EsfInsImpl&) = default;
    EsfInsImpl& operator=(EsfInsImpl&&) = default;

protected:
    virtual const QVariantList& fieldsPropertiesImpl() const override
    {
        static const QVariantList Props = createProps();
        return Props;
    }
};

EsfIns::EsfIns() : m_pImpl(new EsfInsImpl) {}
EsfIns::~EsfIns() = default;

EsfIns& EsfIns::operator=(const EsfIns& other)
{
    *m_pImpl = *other.m_pImpl;
    return *this;
}

EsfIns& EsfIns::operator=(EsfIns&& other)
{
    *m_pImpl = std::move(*other.m_pImpl);
    return *this;
}

EsfIns::MsgIdParamType EsfIns::doGetId()
{
    return ::cc_ublox::message::EsfIns<cc_tools_qt_plugin::cc_ublox::Message, cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::doGetId();
}

const char* EsfIns::nameImpl() const
{
    return static_cast<const cc_tools_qt::Message*>(m_pImpl.get())->name();
}

const QVariantList& EsfIns::fieldsPropertiesImpl() const
{
    return m_pImpl->fieldsProperties();
}

void EsfIns::dispatchImpl(cc_tools_qt::MessageHandler& handler)
{
    static_cast<cc_tools_qt::Message*>(m_pImpl.get())->dispatch(handler);
}

void EsfIns::resetImpl()
{
    m_pImpl->reset();
}

bool EsfIns::assignImpl(const cc_tools_qt::Message& other)
{
    auto* castedOther = dynamic_cast<const EsfIns*>(&other);
    if (castedOther == nullptr) {
        return false;
    }
    return m_pImpl->assign(*castedOther->m_pImpl);
}

EsfIns::MsgIdParamType EsfIns::getIdImpl() const
{
    return m_pImpl->getId();
}

comms::ErrorStatus EsfIns::readImpl(ReadIterator& iter, std::size_t len)
{
    return m_pImpl->read(iter, len);
}

comms::ErrorStatus EsfIns::writeImpl(WriteIterator& iter, std::size_t len) const
{
    return m_pImpl->write(iter, len);
}

bool EsfIns::validImpl() const
{
    return m_pImpl->valid();
}

std::size_t EsfIns::lengthImpl() const
{
    return m_pImpl->length();
}

bool EsfIns::refreshImpl()
{
    return m_pImpl->refresh();
}

} // namespace message

} // namespace cc_ublox

} // namespace cc_tools_qt_plugin
