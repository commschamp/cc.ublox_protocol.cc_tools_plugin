// Generated by commsdsl2tools_qt v6.3.2

#include "CfgTp5.h"

#include "cc_tools_qt/ProtocolMessageBase.h"
#include "cc_tools_qt/property/field.h"
#include "cc_tools_qt_plugin/cc_ublox/field/CfgTp5TpIdx.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Res2.h"
#include "cc_tools_qt_plugin/cc_ublox/options/DefaultOptions.h"
#include "cc_ublox/message/CfgTp5.h"

namespace cc_tools_qt_plugin
{

namespace cc_ublox
{

namespace message
{

namespace
{

static QVariantMap createProps_tpIdx(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::TpIdx;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_cfgTp5TpIdx(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_version(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Version;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_reserved1(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved1;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res2(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_antCableDelay(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::AntCableDelay;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_rfGroupDelay(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::RfGroupDelay;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

struct FreqMembers
{
    static QVariantMap createProps_freq(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::FreqMembers::Freq;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .asMap();
    }
}; // struct FreqMembers

static QVariantMap createProps_freq(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Freq;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .uncheckable()
            .field(FreqMembers::createProps_freq(serHidden))
            .asMap();
}

struct PeriodMembers
{
    static QVariantMap createProps_period(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::PeriodMembers::Period;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .asMap();
    }
}; // struct PeriodMembers

static QVariantMap createProps_period(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Period;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .uncheckable()
            .field(PeriodMembers::createProps_period(serHidden))
            .asMap();
}

struct FreqLockMembers
{
    static QVariantMap createProps_freqLock(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::FreqLockMembers::FreqLock;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .asMap();
    }
}; // struct FreqLockMembers

static QVariantMap createProps_freqLock(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::FreqLock;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .uncheckable()
            .field(FreqLockMembers::createProps_freqLock(serHidden))
            .asMap();
}

struct PeriodLockMembers
{
    static QVariantMap createProps_periodLock(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::PeriodLockMembers::PeriodLock;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .asMap();
    }
}; // struct PeriodLockMembers

static QVariantMap createProps_periodLock(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::PeriodLock;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .uncheckable()
            .field(PeriodLockMembers::createProps_periodLock(serHidden))
            .asMap();
}

struct PulseLenMembers
{
    static QVariantMap createProps_pulseLen(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::PulseLenMembers::PulseLen;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .asMap();
    }
}; // struct PulseLenMembers

static QVariantMap createProps_pulseLen(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::PulseLen;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .uncheckable()
            .field(PulseLenMembers::createProps_pulseLen(serHidden))
            .asMap();
}

struct RatioMembers
{
    static QVariantMap createProps_ratio(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::RatioMembers::Ratio;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .asMap();
    }
}; // struct RatioMembers

static QVariantMap createProps_ratio(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Ratio;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .uncheckable()
            .field(RatioMembers::createProps_ratio(serHidden))
            .asMap();
}

struct PulseLenLockMembers
{
    static QVariantMap createProps_pulseLenLock(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::PulseLenLockMembers::PulseLenLock;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .asMap();
    }
}; // struct PulseLenLockMembers

static QVariantMap createProps_pulseLenLock(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::PulseLenLock;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .uncheckable()
            .field(PulseLenLockMembers::createProps_pulseLenLock(serHidden))
            .asMap();
}

struct RatioLockMembers
{
    static QVariantMap createProps_ratioLock(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::RatioLockMembers::RatioLock;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .asMap();
    }
}; // struct RatioLockMembers

static QVariantMap createProps_ratioLock(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::RatioLock;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .uncheckable()
            .field(RatioLockMembers::createProps_ratioLock(serHidden))
            .asMap();
}

static QVariantMap createProps_userConfigDelay(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::UserConfigDelay;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

struct FlagsMembers
{
    static QVariantMap createProps_bits(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::FlagsMembers::Bits;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add(0U, "active")
                .add(1U, "lockGnssFreq")
                .add(2U, "lockedOtherSet")
                .add(3U, "isFreq")
                .add(4U, "isLength")
                .add(5U, "alignToTow")
                .add(6U, "polarity")
                .asMap();
    }

    static QVariantMap createProps_gridUtcGnss(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::FlagsMembers::GridUtcGnss;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .add("UTC", 0)
                .add("GPS", 1)
                .add("GLONASS", 2)
                .add("BeiDou", 3)
                .add("Galileo", 4)
                .asMap();
    }

    static QVariantMap createProps_syncMode(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::FlagsMembers::SyncMode;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .asMap();
    }

    static QVariantMap createProps_reserved(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::FlagsMembers::Reserved;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .hidden()
                .asMap();
    }
}; // struct FlagsMembers

static QVariantMap createProps_flags(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgTp5Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Flags;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .add(FlagsMembers::createProps_bits(true))
            .add(FlagsMembers::createProps_gridUtcGnss(true))
            .add(FlagsMembers::createProps_syncMode(true))
            .add(FlagsMembers::createProps_reserved(true))
            .asMap();
}

QVariantList createProps()
{
    QVariantList props;
    props.append(createProps_tpIdx(false));
    props.append(createProps_version(false));
    props.append(createProps_reserved1(false));
    props.append(createProps_antCableDelay(false));
    props.append(createProps_rfGroupDelay(false));
    props.append(createProps_freq(false));
    props.append(createProps_period(false));
    props.append(createProps_freqLock(false));
    props.append(createProps_periodLock(false));
    props.append(createProps_pulseLen(false));
    props.append(createProps_ratio(false));
    props.append(createProps_pulseLenLock(false));
    props.append(createProps_ratioLock(false));
    props.append(createProps_userConfigDelay(false));
    props.append(createProps_flags(false));
    return props;
}

} // namespace

class CfgTp5Impl : public
    cc_tools_qt::ProtocolMessageBase<
        ::cc_ublox::message::CfgTp5<cc_tools_qt_plugin::cc_ublox::Message, cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>,
        CfgTp5Impl
    >
{
public:
    CfgTp5Impl() = default;
    CfgTp5Impl(const CfgTp5Impl&) = delete;
    CfgTp5Impl(CfgTp5Impl&&) = delete;
    virtual ~CfgTp5Impl() = default;
    CfgTp5Impl& operator=(const CfgTp5Impl&) = default;
    CfgTp5Impl& operator=(CfgTp5Impl&&) = default;

protected:
    virtual const QVariantList& fieldsPropertiesImpl() const override
    {
        static const QVariantList Props = createProps();
        return Props;
    }
};

CfgTp5::CfgTp5() : m_pImpl(new CfgTp5Impl) {}
CfgTp5::~CfgTp5() = default;

CfgTp5& CfgTp5::operator=(const CfgTp5& other)
{
    *m_pImpl = *other.m_pImpl;
    return *this;
}

CfgTp5& CfgTp5::operator=(CfgTp5&& other)
{
    *m_pImpl = std::move(*other.m_pImpl);
    return *this;
}

CfgTp5::MsgIdParamType CfgTp5::doGetId()
{
    return ::cc_ublox::message::CfgTp5<cc_tools_qt_plugin::cc_ublox::Message, cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::doGetId();
}

const char* CfgTp5::nameImpl() const
{
    return static_cast<const cc_tools_qt::Message*>(m_pImpl.get())->name();
}

const QVariantList& CfgTp5::fieldsPropertiesImpl() const
{
    return m_pImpl->fieldsProperties();
}

void CfgTp5::dispatchImpl(cc_tools_qt::MessageHandler& handler)
{
    static_cast<cc_tools_qt::Message*>(m_pImpl.get())->dispatch(handler);
}

void CfgTp5::resetImpl()
{
    m_pImpl->reset();
}

bool CfgTp5::assignImpl(const cc_tools_qt::Message& other)
{
    auto* castedOther = dynamic_cast<const CfgTp5*>(&other);
    if (castedOther == nullptr) {
        return false;
    }
    return m_pImpl->assign(*castedOther->m_pImpl);
}

CfgTp5::MsgIdParamType CfgTp5::getIdImpl() const
{
    return m_pImpl->getId();
}

comms::ErrorStatus CfgTp5::readImpl(ReadIterator& iter, std::size_t len)
{
    return m_pImpl->read(iter, len);
}

comms::ErrorStatus CfgTp5::writeImpl(WriteIterator& iter, std::size_t len) const
{
    return m_pImpl->write(iter, len);
}

bool CfgTp5::validImpl() const
{
    return m_pImpl->valid();
}

std::size_t CfgTp5::lengthImpl() const
{
    return m_pImpl->length();
}

bool CfgTp5::refreshImpl()
{
    return m_pImpl->refresh();
}

} // namespace message

} // namespace cc_ublox

} // namespace cc_tools_qt_plugin
