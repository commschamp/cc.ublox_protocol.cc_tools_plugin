// Generated by commsdsl2tools_qt v6.3.3

#include "MgaGloAlm.h"

#include "cc_tools_qt/ProtocolMessageBase.h"
#include "cc_tools_qt/property/field.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Res1.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Res4.h"
#include "cc_tools_qt_plugin/cc_ublox/options/DefaultOptions.h"
#include "cc_ublox/message/MgaGloAlm.h"

namespace cc_tools_qt_plugin
{

namespace cc_ublox
{

namespace message
{

namespace
{

static QVariantMap createProps_type(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGloAlmFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Type;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .readOnly()
            .asMap();
}

static QVariantMap createProps_version(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGloAlmFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Version;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_svid(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGloAlmFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Svid;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_reserved1(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGloAlmFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved1;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res1(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_n(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGloAlmFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::N;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_m(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGloAlmFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::M;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_c(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGloAlmFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::C;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_tau(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGloAlmFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Tau;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_epsilon(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGloAlmFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Epsilon;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_lambda(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGloAlmFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Lambda;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_deltaI(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGloAlmFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::DeltaI;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_tLambda(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGloAlmFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::TLambda;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_deltaT(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGloAlmFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::DeltaT;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_deltaDT(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGloAlmFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::DeltaDT;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_h(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGloAlmFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::H;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_omega(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGloAlmFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Omega;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_reserved2(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGloAlmFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved2;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res4(Field::name(), serHidden);
    return props;
}

QVariantList createProps()
{
    QVariantList props;
    props.append(createProps_type(false));
    props.append(createProps_version(false));
    props.append(createProps_svid(false));
    props.append(createProps_reserved1(false));
    props.append(createProps_n(false));
    props.append(createProps_m(false));
    props.append(createProps_c(false));
    props.append(createProps_tau(false));
    props.append(createProps_epsilon(false));
    props.append(createProps_lambda(false));
    props.append(createProps_deltaI(false));
    props.append(createProps_tLambda(false));
    props.append(createProps_deltaT(false));
    props.append(createProps_deltaDT(false));
    props.append(createProps_h(false));
    props.append(createProps_omega(false));
    props.append(createProps_reserved2(false));
    return props;
}

} // namespace

class MgaGloAlmImpl : public
    cc_tools_qt::ProtocolMessageBase<
        ::cc_ublox::message::MgaGloAlm<cc_tools_qt_plugin::cc_ublox::Message, cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>,
        MgaGloAlmImpl
    >
{
public:
    MgaGloAlmImpl() = default;
    MgaGloAlmImpl(const MgaGloAlmImpl&) = delete;
    MgaGloAlmImpl(MgaGloAlmImpl&&) = delete;
    virtual ~MgaGloAlmImpl() = default;
    MgaGloAlmImpl& operator=(const MgaGloAlmImpl&) = default;
    MgaGloAlmImpl& operator=(MgaGloAlmImpl&&) = default;

protected:
    virtual const QVariantList& fieldsPropertiesImpl() const override
    {
        static const QVariantList Props = createProps();
        return Props;
    }
};

MgaGloAlm::MgaGloAlm() : m_pImpl(new MgaGloAlmImpl) {}
MgaGloAlm::~MgaGloAlm() = default;

MgaGloAlm& MgaGloAlm::operator=(const MgaGloAlm& other)
{
    *m_pImpl = *other.m_pImpl;
    return *this;
}

MgaGloAlm& MgaGloAlm::operator=(MgaGloAlm&& other)
{
    *m_pImpl = std::move(*other.m_pImpl);
    return *this;
}

MgaGloAlm::MsgIdParamType MgaGloAlm::doGetId()
{
    return ::cc_ublox::message::MgaGloAlm<cc_tools_qt_plugin::cc_ublox::Message, cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::doGetId();
}

const char* MgaGloAlm::nameImpl() const
{
    return static_cast<const cc_tools_qt::Message*>(m_pImpl.get())->name();
}

const QVariantList& MgaGloAlm::fieldsPropertiesImpl() const
{
    return m_pImpl->fieldsProperties();
}

void MgaGloAlm::dispatchImpl(cc_tools_qt::MessageHandler& handler)
{
    static_cast<cc_tools_qt::Message*>(m_pImpl.get())->dispatch(handler);
}

void MgaGloAlm::resetImpl()
{
    m_pImpl->reset();
}

bool MgaGloAlm::assignImpl(const cc_tools_qt::Message& other)
{
    auto* castedOther = dynamic_cast<const MgaGloAlm*>(&other);
    if (castedOther == nullptr) {
        return false;
    }
    return m_pImpl->assign(*castedOther->m_pImpl);
}

MgaGloAlm::MsgIdParamType MgaGloAlm::getIdImpl() const
{
    return m_pImpl->getId();
}

comms::ErrorStatus MgaGloAlm::readImpl(ReadIterator& iter, std::size_t len)
{
    return m_pImpl->read(iter, len);
}

comms::ErrorStatus MgaGloAlm::writeImpl(WriteIterator& iter, std::size_t len) const
{
    return m_pImpl->write(iter, len);
}

bool MgaGloAlm::validImpl() const
{
    return m_pImpl->valid();
}

std::size_t MgaGloAlm::lengthImpl() const
{
    return m_pImpl->length();
}

bool MgaGloAlm::refreshImpl()
{
    return m_pImpl->refresh();
}

} // namespace message

} // namespace cc_ublox

} // namespace cc_tools_qt_plugin
