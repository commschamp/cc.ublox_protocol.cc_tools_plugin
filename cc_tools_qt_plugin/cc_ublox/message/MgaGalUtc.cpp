// Generated by commsdsl2tools_qt v6.3.4

#include "MgaGalUtc.h"

#include "cc_tools_qt/ProtocolMessageBase.h"
#include "cc_tools_qt/property/field.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Res2.h"
#include "cc_tools_qt_plugin/cc_ublox/options/DefaultOptions.h"
#include "cc_ublox/message/MgaGalUtc.h"

namespace cc_tools_qt_plugin
{

namespace cc_ublox
{

namespace message
{

namespace
{

static QVariantMap createProps_type(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGalUtcFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Type;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .readOnly()
            .asMap();
}

static QVariantMap createProps_version(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGalUtcFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Version;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_reserved1(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGalUtcFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved1;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res2(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_a0(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGalUtcFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::A0;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_a1(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGalUtcFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::A1;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_dtLS(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGalUtcFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::DtLS;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_tot(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGalUtcFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Tot;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_wnt(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGalUtcFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Wnt;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_wnLSF(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGalUtcFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::WnLSF;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_dN(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGalUtcFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::DN;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_dTLSF(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGalUtcFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::DTLSF;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_reserved2(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::MgaGalUtcFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved2;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res2(Field::name(), serHidden);
    return props;
}

QVariantList createProps()
{
    QVariantList props;
    props.append(createProps_type(false));
    props.append(createProps_version(false));
    props.append(createProps_reserved1(false));
    props.append(createProps_a0(false));
    props.append(createProps_a1(false));
    props.append(createProps_dtLS(false));
    props.append(createProps_tot(false));
    props.append(createProps_wnt(false));
    props.append(createProps_wnLSF(false));
    props.append(createProps_dN(false));
    props.append(createProps_dTLSF(false));
    props.append(createProps_reserved2(false));
    return props;
}

} // namespace

class MgaGalUtcImpl : public
    cc_tools_qt::ProtocolMessageBase<
        ::cc_ublox::message::MgaGalUtc<cc_tools_qt_plugin::cc_ublox::Message, cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>,
        MgaGalUtcImpl
    >
{
public:
    MgaGalUtcImpl() = default;
    MgaGalUtcImpl(const MgaGalUtcImpl&) = delete;
    MgaGalUtcImpl(MgaGalUtcImpl&&) = delete;
    virtual ~MgaGalUtcImpl() = default;
    MgaGalUtcImpl& operator=(const MgaGalUtcImpl&) = default;
    MgaGalUtcImpl& operator=(MgaGalUtcImpl&&) = default;

protected:
    virtual const QVariantList& fieldsPropertiesImpl() const override
    {
        static const QVariantList Props = createProps();
        return Props;
    }
};

MgaGalUtc::MgaGalUtc() : m_pImpl(new MgaGalUtcImpl) {}
MgaGalUtc::~MgaGalUtc() = default;

MgaGalUtc& MgaGalUtc::operator=(const MgaGalUtc& other)
{
    *m_pImpl = *other.m_pImpl;
    return *this;
}

MgaGalUtc& MgaGalUtc::operator=(MgaGalUtc&& other)
{
    *m_pImpl = std::move(*other.m_pImpl);
    return *this;
}

MgaGalUtc::MsgIdParamType MgaGalUtc::doGetId()
{
    return ::cc_ublox::message::MgaGalUtc<cc_tools_qt_plugin::cc_ublox::Message, cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::doGetId();
}

const char* MgaGalUtc::nameImpl() const
{
    return static_cast<const cc_tools_qt::Message*>(m_pImpl.get())->name();
}

const QVariantList& MgaGalUtc::fieldsPropertiesImpl() const
{
    return m_pImpl->fieldsProperties();
}

void MgaGalUtc::dispatchImpl(cc_tools_qt::MessageHandler& handler)
{
    static_cast<cc_tools_qt::Message*>(m_pImpl.get())->dispatch(handler);
}

void MgaGalUtc::resetImpl()
{
    m_pImpl->reset();
}

bool MgaGalUtc::assignImpl(const cc_tools_qt::Message& other)
{
    auto* castedOther = dynamic_cast<const MgaGalUtc*>(&other);
    if (castedOther == nullptr) {
        return false;
    }
    return m_pImpl->assign(*castedOther->m_pImpl);
}

MgaGalUtc::MsgIdParamType MgaGalUtc::getIdImpl() const
{
    return m_pImpl->getId();
}

comms::ErrorStatus MgaGalUtc::readImpl(ReadIterator& iter, std::size_t len)
{
    return m_pImpl->read(iter, len);
}

comms::ErrorStatus MgaGalUtc::writeImpl(WriteIterator& iter, std::size_t len) const
{
    return m_pImpl->write(iter, len);
}

bool MgaGalUtc::validImpl() const
{
    return m_pImpl->valid();
}

std::size_t MgaGalUtc::lengthImpl() const
{
    return m_pImpl->length();
}

bool MgaGalUtc::refreshImpl()
{
    return m_pImpl->refresh();
}

} // namespace message

} // namespace cc_ublox

} // namespace cc_tools_qt_plugin
