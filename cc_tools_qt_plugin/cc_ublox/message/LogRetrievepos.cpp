// Generated by commsdsl2tools_qt v6.3.0

#include "LogRetrievepos.h"

#include "cc_tools_qt/ProtocolMessageBase.h"
#include "cc_tools_qt/property/field.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Day.h"
#include "cc_tools_qt_plugin/cc_ublox/field/GpsFix.h"
#include "cc_tools_qt_plugin/cc_ublox/field/HAcc.h"
#include "cc_tools_qt_plugin/cc_ublox/field/HMSL.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Heading.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Hour.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Lat.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Lon.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Min.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Month.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Res1.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Sec.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Year.h"
#include "cc_tools_qt_plugin/cc_ublox/options/DefaultOptions.h"
#include "cc_ublox/message/LogRetrievepos.h"

namespace cc_tools_qt_plugin
{

namespace cc_ublox
{

namespace message
{

namespace
{

static QVariantMap createProps_entryIndex(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::EntryIndex;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_lon(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Lon;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_lon(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_lat(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Lat;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_lat(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_hMSL(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::HMSL;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_hMSL(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_hAcc(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::HAcc;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_hAcc(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_gSpeed(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::GSpeed;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_heading(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Heading;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_heading(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_version(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Version;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_fixType(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::FixType;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_gpsFix(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_year(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Year;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_year(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_month(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Month;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_month(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_day(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Day;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_day(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_hour(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Hour;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_hour(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_minute(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Minute;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_min(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_second(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Second;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_sec(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_reserved1(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved1;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res1(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_numSV(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::NumSV;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_reserved2(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved2;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res1(Field::name(), serHidden);
    return props;
}

QVariantList createProps()
{
    QVariantList props;
    props.append(createProps_entryIndex(false));
    props.append(createProps_lon(false));
    props.append(createProps_lat(false));
    props.append(createProps_hMSL(false));
    props.append(createProps_hAcc(false));
    props.append(createProps_gSpeed(false));
    props.append(createProps_heading(false));
    props.append(createProps_version(false));
    props.append(createProps_fixType(false));
    props.append(createProps_year(false));
    props.append(createProps_month(false));
    props.append(createProps_day(false));
    props.append(createProps_hour(false));
    props.append(createProps_minute(false));
    props.append(createProps_second(false));
    props.append(createProps_reserved1(false));
    props.append(createProps_numSV(false));
    props.append(createProps_reserved2(false));
    return props;
}

} // namespace

class LogRetrieveposImpl : public
    cc_tools_qt::ProtocolMessageBase<
        ::cc_ublox::message::LogRetrievepos<cc_tools_qt_plugin::cc_ublox::Message, cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>,
        LogRetrieveposImpl
    >
{
public:
    LogRetrieveposImpl() = default;
    LogRetrieveposImpl(const LogRetrieveposImpl&) = delete;
    LogRetrieveposImpl(LogRetrieveposImpl&&) = delete;
    virtual ~LogRetrieveposImpl() = default;
    LogRetrieveposImpl& operator=(const LogRetrieveposImpl&) = default;
    LogRetrieveposImpl& operator=(LogRetrieveposImpl&&) = default;

protected:
    virtual const QVariantList& fieldsPropertiesImpl() const override
    {
        static const QVariantList Props = createProps();
        return Props;
    }
};

LogRetrievepos::LogRetrievepos() : m_pImpl(new LogRetrieveposImpl) {}
LogRetrievepos::~LogRetrievepos() = default;

LogRetrievepos& LogRetrievepos::operator=(const LogRetrievepos& other)
{
    *m_pImpl = *other.m_pImpl;
    return *this;
}

LogRetrievepos& LogRetrievepos::operator=(LogRetrievepos&& other)
{
    *m_pImpl = std::move(*other.m_pImpl);
    return *this;
}

LogRetrievepos::MsgIdParamType LogRetrievepos::doGetId()
{
    return ::cc_ublox::message::LogRetrievepos<cc_tools_qt_plugin::cc_ublox::Message, cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::doGetId();
}

const char* LogRetrievepos::nameImpl() const
{
    return static_cast<const cc_tools_qt::Message*>(m_pImpl.get())->name();
}

const QVariantList& LogRetrievepos::fieldsPropertiesImpl() const
{
    return m_pImpl->fieldsProperties();
}

void LogRetrievepos::dispatchImpl(cc_tools_qt::MessageHandler& handler)
{
    static_cast<cc_tools_qt::Message*>(m_pImpl.get())->dispatch(handler);
}

void LogRetrievepos::resetImpl()
{
    m_pImpl->reset();
}

bool LogRetrievepos::assignImpl(const cc_tools_qt::Message& other)
{
    auto* castedOther = dynamic_cast<const LogRetrievepos*>(&other);
    if (castedOther == nullptr) {
        return false;
    }
    return m_pImpl->assign(*castedOther->m_pImpl);
}

LogRetrievepos::MsgIdParamType LogRetrievepos::getIdImpl() const
{
    return m_pImpl->getId();
}

comms::ErrorStatus LogRetrievepos::readImpl(ReadIterator& iter, std::size_t len)
{
    return m_pImpl->read(iter, len);
}

comms::ErrorStatus LogRetrievepos::writeImpl(WriteIterator& iter, std::size_t len) const
{
    return m_pImpl->write(iter, len);
}

bool LogRetrievepos::validImpl() const
{
    return m_pImpl->valid();
}

std::size_t LogRetrievepos::lengthImpl() const
{
    return m_pImpl->length();
}

bool LogRetrievepos::refreshImpl()
{
    return m_pImpl->refresh();
}

} // namespace message

} // namespace cc_ublox

} // namespace cc_tools_qt_plugin
