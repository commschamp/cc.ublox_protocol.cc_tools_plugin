// Generated by commsdsl2tools_qt v6.3.3

#include "LogRetrieveposextra.h"

#include "cc_tools_qt/ProtocolMessageBase.h"
#include "cc_tools_qt/property/field.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Day.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Hour.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Min.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Month.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Res1.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Res3.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Sec.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Year.h"
#include "cc_tools_qt_plugin/cc_ublox/options/DefaultOptions.h"
#include "cc_ublox/message/LogRetrieveposextra.h"

namespace cc_tools_qt_plugin
{

namespace cc_ublox
{

namespace message
{

namespace
{

static QVariantMap createProps_entryIndex(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposextraFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::EntryIndex;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_version(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposextraFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Version;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_reserved1(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposextraFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved1;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res1(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_year(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposextraFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Year;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_year(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_month(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposextraFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Month;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_month(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_day(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposextraFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Day;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_day(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_hour(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposextraFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Hour;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_hour(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_minute(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposextraFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Minute;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_min(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_second(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposextraFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Second;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_sec(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_reserved2(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposextraFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved2;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res3(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_distance(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposextraFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Distance;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

struct Reserved3Members
{
    static QVariantMap createProps_element(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::message::LogRetrieveposextraFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved3Members::Element;
        auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res1(Field::name(), serHidden);
        return props;
    }
}; // struct Reserved3Members

static QVariantMap createProps_reserved3(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::LogRetrieveposextraFields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved3;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .serialisedHidden()
            .add(Reserved3Members::createProps_element(serHidden))
            .appendIndexToElementName()
            .asMap();
}

QVariantList createProps()
{
    QVariantList props;
    props.append(createProps_entryIndex(false));
    props.append(createProps_version(false));
    props.append(createProps_reserved1(false));
    props.append(createProps_year(false));
    props.append(createProps_month(false));
    props.append(createProps_day(false));
    props.append(createProps_hour(false));
    props.append(createProps_minute(false));
    props.append(createProps_second(false));
    props.append(createProps_reserved2(false));
    props.append(createProps_distance(false));
    props.append(createProps_reserved3(false));
    return props;
}

} // namespace

class LogRetrieveposextraImpl : public
    cc_tools_qt::ProtocolMessageBase<
        ::cc_ublox::message::LogRetrieveposextra<cc_tools_qt_plugin::cc_ublox::Message, cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>,
        LogRetrieveposextraImpl
    >
{
public:
    LogRetrieveposextraImpl() = default;
    LogRetrieveposextraImpl(const LogRetrieveposextraImpl&) = delete;
    LogRetrieveposextraImpl(LogRetrieveposextraImpl&&) = delete;
    virtual ~LogRetrieveposextraImpl() = default;
    LogRetrieveposextraImpl& operator=(const LogRetrieveposextraImpl&) = default;
    LogRetrieveposextraImpl& operator=(LogRetrieveposextraImpl&&) = default;

protected:
    virtual const QVariantList& fieldsPropertiesImpl() const override
    {
        static const QVariantList Props = createProps();
        return Props;
    }
};

LogRetrieveposextra::LogRetrieveposextra() : m_pImpl(new LogRetrieveposextraImpl) {}
LogRetrieveposextra::~LogRetrieveposextra() = default;

LogRetrieveposextra& LogRetrieveposextra::operator=(const LogRetrieveposextra& other)
{
    *m_pImpl = *other.m_pImpl;
    return *this;
}

LogRetrieveposextra& LogRetrieveposextra::operator=(LogRetrieveposextra&& other)
{
    *m_pImpl = std::move(*other.m_pImpl);
    return *this;
}

LogRetrieveposextra::MsgIdParamType LogRetrieveposextra::doGetId()
{
    return ::cc_ublox::message::LogRetrieveposextra<cc_tools_qt_plugin::cc_ublox::Message, cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::doGetId();
}

const char* LogRetrieveposextra::nameImpl() const
{
    return static_cast<const cc_tools_qt::Message*>(m_pImpl.get())->name();
}

const QVariantList& LogRetrieveposextra::fieldsPropertiesImpl() const
{
    return m_pImpl->fieldsProperties();
}

void LogRetrieveposextra::dispatchImpl(cc_tools_qt::MessageHandler& handler)
{
    static_cast<cc_tools_qt::Message*>(m_pImpl.get())->dispatch(handler);
}

void LogRetrieveposextra::resetImpl()
{
    m_pImpl->reset();
}

bool LogRetrieveposextra::assignImpl(const cc_tools_qt::Message& other)
{
    auto* castedOther = dynamic_cast<const LogRetrieveposextra*>(&other);
    if (castedOther == nullptr) {
        return false;
    }
    return m_pImpl->assign(*castedOther->m_pImpl);
}

LogRetrieveposextra::MsgIdParamType LogRetrieveposextra::getIdImpl() const
{
    return m_pImpl->getId();
}

comms::ErrorStatus LogRetrieveposextra::readImpl(ReadIterator& iter, std::size_t len)
{
    return m_pImpl->read(iter, len);
}

comms::ErrorStatus LogRetrieveposextra::writeImpl(WriteIterator& iter, std::size_t len) const
{
    return m_pImpl->write(iter, len);
}

bool LogRetrieveposextra::validImpl() const
{
    return m_pImpl->valid();
}

std::size_t LogRetrieveposextra::lengthImpl() const
{
    return m_pImpl->length();
}

bool LogRetrieveposextra::refreshImpl()
{
    return m_pImpl->refresh();
}

} // namespace message

} // namespace cc_ublox

} // namespace cc_tools_qt_plugin
