// Generated by commsdsl2tools_qt v6.3.3

#include "CfgNavx5V3.h"

#include "cc_tools_qt/ProtocolMessageBase.h"
#include "cc_tools_qt/property/field.h"
#include "cc_tools_qt_plugin/cc_ublox/field/CfgNavx5AopCfg.h"
#include "cc_tools_qt_plugin/cc_ublox/field/CfgNavx5AopOrbMaxErr.h"
#include "cc_tools_qt_plugin/cc_ublox/field/CfgNavx5Mask1.h"
#include "cc_tools_qt_plugin/cc_ublox/field/CfgNavx5Mask2.h"
#include "cc_tools_qt_plugin/cc_ublox/field/CfgNavx5SigAttenCompMode.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Res1.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Res2.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Res3.h"
#include "cc_tools_qt_plugin/cc_ublox/field/Res4.h"
#include "cc_tools_qt_plugin/cc_ublox/options/DefaultOptions.h"
#include "cc_ublox/message/CfgNavx5V3.h"

namespace cc_tools_qt_plugin
{

namespace cc_ublox
{

namespace message
{

namespace
{

static QVariantMap createProps_version(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Version;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .readOnly()
            .asMap();
}

static QVariantMap createProps_mask1(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Mask1;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_cfgNavx5Mask1(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_mask2(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Mask2;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_cfgNavx5Mask2(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_reserved1(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved1;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res2(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_minSVs(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::MinSVs;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_maxSVs(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::MaxSVs;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_minCNO(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::MinCNO;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_reserved2(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved2;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res1(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_iniFix3D(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::IniFix3D;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_reserved3(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved3;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res2(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_ackAiding(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::AckAiding;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_wknRollover(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::WknRollover;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_sigAttenCompMode(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::SigAttenCompMode;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_cfgNavx5SigAttenCompMode(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_reserved4(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved4;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res1(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_reserved5(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved5;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res2(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_reserved6(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved6;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res2(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_usePPP(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::UsePPP;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_aopCfg(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::AopCfg;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_cfgNavx5AopCfg(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_reserved7(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved7;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res2(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_aopOrbMaxErr(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::AopOrbMaxErr;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_cfgNavx5AopOrbMaxErr(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_reserved8(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved8;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res4(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_reserved9(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved9;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res3(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_useAdr(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::UseAdr;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .asMap();
}

static QVariantMap createProps_reserved10(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved10;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res2(Field::name(), serHidden);
    return props;
}

static QVariantMap createProps_reserved11(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_ublox::message::CfgNavx5V3Fields<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::Reserved11;
    auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_res2(Field::name(), serHidden);
    return props;
}

QVariantList createProps()
{
    QVariantList props;
    props.append(createProps_version(false));
    props.append(createProps_mask1(false));
    props.append(createProps_mask2(false));
    props.append(createProps_reserved1(false));
    props.append(createProps_minSVs(false));
    props.append(createProps_maxSVs(false));
    props.append(createProps_minCNO(false));
    props.append(createProps_reserved2(false));
    props.append(createProps_iniFix3D(false));
    props.append(createProps_reserved3(false));
    props.append(createProps_ackAiding(false));
    props.append(createProps_wknRollover(false));
    props.append(createProps_sigAttenCompMode(false));
    props.append(createProps_reserved4(false));
    props.append(createProps_reserved5(false));
    props.append(createProps_reserved6(false));
    props.append(createProps_usePPP(false));
    props.append(createProps_aopCfg(false));
    props.append(createProps_reserved7(false));
    props.append(createProps_aopOrbMaxErr(false));
    props.append(createProps_reserved8(false));
    props.append(createProps_reserved9(false));
    props.append(createProps_useAdr(false));
    props.append(createProps_reserved10(false));
    props.append(createProps_reserved11(false));
    return props;
}

} // namespace

class CfgNavx5V3Impl : public
    cc_tools_qt::ProtocolMessageBase<
        ::cc_ublox::message::CfgNavx5V3<cc_tools_qt_plugin::cc_ublox::Message, cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>,
        CfgNavx5V3Impl
    >
{
public:
    CfgNavx5V3Impl() = default;
    CfgNavx5V3Impl(const CfgNavx5V3Impl&) = delete;
    CfgNavx5V3Impl(CfgNavx5V3Impl&&) = delete;
    virtual ~CfgNavx5V3Impl() = default;
    CfgNavx5V3Impl& operator=(const CfgNavx5V3Impl&) = default;
    CfgNavx5V3Impl& operator=(CfgNavx5V3Impl&&) = default;

protected:
    virtual const QVariantList& fieldsPropertiesImpl() const override
    {
        static const QVariantList Props = createProps();
        return Props;
    }
};

CfgNavx5V3::CfgNavx5V3() : m_pImpl(new CfgNavx5V3Impl) {}
CfgNavx5V3::~CfgNavx5V3() = default;

CfgNavx5V3& CfgNavx5V3::operator=(const CfgNavx5V3& other)
{
    *m_pImpl = *other.m_pImpl;
    return *this;
}

CfgNavx5V3& CfgNavx5V3::operator=(CfgNavx5V3&& other)
{
    *m_pImpl = std::move(*other.m_pImpl);
    return *this;
}

CfgNavx5V3::MsgIdParamType CfgNavx5V3::doGetId()
{
    return ::cc_ublox::message::CfgNavx5V3<cc_tools_qt_plugin::cc_ublox::Message, cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::doGetId();
}

const char* CfgNavx5V3::nameImpl() const
{
    return static_cast<const cc_tools_qt::Message*>(m_pImpl.get())->name();
}

const QVariantList& CfgNavx5V3::fieldsPropertiesImpl() const
{
    return m_pImpl->fieldsProperties();
}

void CfgNavx5V3::dispatchImpl(cc_tools_qt::MessageHandler& handler)
{
    static_cast<cc_tools_qt::Message*>(m_pImpl.get())->dispatch(handler);
}

void CfgNavx5V3::resetImpl()
{
    m_pImpl->reset();
}

bool CfgNavx5V3::assignImpl(const cc_tools_qt::Message& other)
{
    auto* castedOther = dynamic_cast<const CfgNavx5V3*>(&other);
    if (castedOther == nullptr) {
        return false;
    }
    return m_pImpl->assign(*castedOther->m_pImpl);
}

CfgNavx5V3::MsgIdParamType CfgNavx5V3::getIdImpl() const
{
    return m_pImpl->getId();
}

comms::ErrorStatus CfgNavx5V3::readImpl(ReadIterator& iter, std::size_t len)
{
    return m_pImpl->read(iter, len);
}

comms::ErrorStatus CfgNavx5V3::writeImpl(WriteIterator& iter, std::size_t len) const
{
    return m_pImpl->write(iter, len);
}

bool CfgNavx5V3::validImpl() const
{
    return m_pImpl->valid();
}

std::size_t CfgNavx5V3::lengthImpl() const
{
    return m_pImpl->length();
}

bool CfgNavx5V3::refreshImpl()
{
    return m_pImpl->refresh();
}

} // namespace message

} // namespace cc_ublox

} // namespace cc_tools_qt_plugin
