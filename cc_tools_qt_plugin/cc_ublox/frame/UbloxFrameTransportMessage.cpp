// Generated by commsdsl2tools_qt v6.3.3

#include "UbloxFrameTransportMessage.h"

#include "cc_tools_qt/property/field.h"
#include "cc_tools_qt_plugin/cc_ublox/field/MsgId.h"
#include "cc_tools_qt_plugin/cc_ublox/options/DefaultOptions.h"

namespace cc_tools_qt_plugin
{

namespace cc_ublox
{

namespace frame
{

struct SyncLayer
{
    static QVariantMap createProps_sync(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::frame::UbloxFrameLayers<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::SyncMembers::Sync;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .asMap();
    }
}; // struct SyncLayer

struct IdLayer
{
    static QVariantMap createProps_msgId(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::frame::UbloxFrameLayers<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::IdMembers::MsgId;
        auto props = cc_tools_qt_plugin::cc_ublox::field::createProps_msgId(Field::name(), serHidden);
        return props;
    }
}; // struct IdLayer

struct LengthLayer
{
    static QVariantMap createProps_lENGTH(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::frame::UbloxFrameLayers<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::LengthMembers::LENGTH;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .asMap();
    }
}; // struct LengthLayer

struct PayloadLayer
{
    static QVariantMap createProps_payload(bool serHidden)
    {
        return cc_tools_qt::property::field::ArrayList().name("Payload").serialisedHidden(serHidden).asMap();
    }
}; // struct PayloadLayer

struct ChecksumLayer
{
    static QVariantMap createProps_checksum(bool serHidden)
    {
        static_cast<void>(serHidden);
        using Field = ::cc_ublox::frame::UbloxFrameLayers<cc_tools_qt_plugin::cc_ublox::options::DefaultOptions>::ChecksumMembers::Checksum;
        return
            cc_tools_qt::property::field::ForField<Field>()
                .name(Field::name())
                .serialisedHidden(serHidden)
                .asMap();
    }
}; // struct ChecksumLayer

namespace
{

QVariantList createProps()
{
     QVariantList props;
     props.append(SyncLayer::createProps_sync(false));
     props.append(IdLayer::createProps_msgId(false));
     props.append(LengthLayer::createProps_lENGTH(false));
     props.append(PayloadLayer::createProps_payload(false));
     props.append(ChecksumLayer::createProps_checksum(false));
     return props;
}

} // namespace

const QVariantList& UbloxFrameTransportMessageFields::props()
{
    static const QVariantList Props = createProps();
    return Props;
}

const QVariantList& UbloxFrameTransportMessage::fieldsPropertiesImpl() const
{
    return UbloxFrameTransportMessageFields::props();
}

comms::ErrorStatus UbloxFrameTransportMessage::readImpl(ReadIterator& iter, std::size_t len)
{
    len -= 2U;
    auto es = doReadUntilAndUpdateLen<4U>(iter, len);
    if (es == comms::ErrorStatus::Success) {
        len += 2U;
        es = doReadFrom<4U>(iter, len);
    }

    return es;
}

} // namespace frame

} // namespace cc_ublox

} // namespace cc_tools_qt_plugin
